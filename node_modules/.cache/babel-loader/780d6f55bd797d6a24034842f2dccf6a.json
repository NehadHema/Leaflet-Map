{"ast":null,"code":"var _jsxFileName = \"D:\\\\2020\\\\Courses\\\\2022\\\\Route\\\\Leaflet\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { MapContainer, Marker, Popup, TileLayer, useMap } from 'react-leaflet';\nimport tesla from './data/testadata.json';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [leaflet, setLeaflet] = useState([]);\n  async function getData() {\n    let {\n      data\n    } = await axios.get('https://ndgishub.nd.gov/arcgis/rest/services/All_GovtBoundaries/MapServer/20');\n    console.log(data.results);\n    setLeaflet(data.results);\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // console.log(tesla);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 3\n      }, this), leaflet.map(leaf => {\n        /*#__PURE__*/_jsxDEV(Marker, {\n          position: [leaf.geo.latitude, leaf.geo.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            position: [leaf.geo.latitude, leaf.geo.longitude],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: leaf.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: leaf.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 4\n          }, this)\n        }, leaf.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 3\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"gMttac+fFtDAItz80OrxlYWE15g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MapContainer","Marker","Popup","TileLayer","useMap","tesla","useEffect","useState","axios","App","leaflet","setLeaflet","getData","data","get","console","log","results","map","leaf","geo","latitude","longitude","name","description","id"],"sources":["D:/2020/Courses/2022/Route/Leaflet/src/App.js"],"sourcesContent":["import { MapContainer, Marker, Popup, TileLayer, useMap } from 'react-leaflet';\nimport tesla from './data/testadata.json';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const[leaflet,setLeaflet] = useState([]);\n  async function getData() {\n    let {data} = await axios.get('https://ndgishub.nd.gov/arcgis/rest/services/All_GovtBoundaries/MapServer/20');\n    console.log(data.results);\n    setLeaflet(data.results);\n  }\n\n  useEffect(()=>{\n    getData();\n  },[]);\n\n// console.log(tesla);\n  return (\n    <>\n    <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={true}>\n  <TileLayer\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n  \n  {leaflet.map(leaf=>{\n  <Marker key={leaf.id}\n   position={[leaf.geo.latitude, leaf.geo.longitude]}>\n   <Popup position={[leaf.geo.latitude, leaf.geo.longitude]}>\n     <div>\n      <h2>{leaf.name}</h2>\n      <p>{leaf.description}</p>\n     </div>\n   </Popup>\n    </Marker>}\n   \n   ) }\n</MapContainer>\n    \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC9E,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAK,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,eAAeK,OAAO,GAAG;IACvB,IAAI;MAACC;IAAI,CAAC,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,8EAA8E,CAAC;IAC5GC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;IACzBN,UAAU,CAACE,IAAI,CAACI,OAAO,CAAC;EAC1B;EAEAX,SAAS,CAAC,MAAI;IACZM,OAAO,EAAE;EACX,CAAC,EAAC,EAAE,CAAC;;EAEP;EACE,oBACE;IAAA,uBACA,QAAC,YAAY;MAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAE;MAAC,IAAI,EAAE,EAAG;MAAC,eAAe,EAAE,IAAK;MAAA,wBACzE,QAAC,SAAS;QACR,WAAW,EAAC,yFAAyF;QACrG,GAAG,EAAC;MAAoD;QAAA;QAAA;QAAA;MAAA,QACtD,EAEHF,OAAO,CAACQ,GAAG,CAACC,IAAI,IAAE;QACnB,qBAAC,MAAM;UACN,QAAQ,EAAE,CAACA,IAAI,CAACC,GAAG,CAACC,QAAQ,EAAEF,IAAI,CAACC,GAAG,CAACE,SAAS,CAAE;UAAA,uBAClD,QAAC,KAAK;YAAC,QAAQ,EAAE,CAACH,IAAI,CAACC,GAAG,CAACC,QAAQ,EAAEF,IAAI,CAACC,GAAG,CAACE,SAAS,CAAE;YAAA,uBACvD;cAAA,wBACC;gBAAA,UAAKH,IAAI,CAACI;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACpB;gBAAA,UAAIJ,IAAI,CAACK;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA;UACpB;YAAA;YAAA;YAAA;UAAA;QACA,GAPIL,IAAI,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QAQT;MAAA,CAAC,CAEV;IAAA;MAAA;MAAA;MAAA;IAAA;EACW,iBAER;AAEP;AAAC,GArCQhB,GAAG;AAAA,KAAHA,GAAG;AAuCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}